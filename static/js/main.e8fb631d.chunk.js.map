{"version":3,"sources":["components/stopwatch/stopwatch.module.css","components/stopwatch/Stopwatch.js","components/App.js","index.js","components/App.module.css"],"names":["module","exports","format","num","Stopwatch","props","hours","minutes","seconds","h","m","s","className","styles","timeDisplay","App","useState","setHours","setMinutes","setSeconds","intervalTime","timer","run","setRun","useEffect","interval","subscribe","unsubscribe","style","content","headline","button","onClick","e","click$","fromEvent","target","type","pipe","buffer","debounceTime","map","clicks","length","filter","clicksLength","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0GACAA,EAAOC,QAAU,CAAC,YAAc,iC,4GCShC,SAASC,EAAOC,GACZ,OAAOA,GAAO,EAAI,IAAMA,EAAMA,EAGnBC,MAZG,SAACC,GAAW,IACnBC,EAA2BD,EAA3BC,MAAOC,EAAoBF,EAApBE,QAASC,EAAWH,EAAXG,QACnBC,EAAIP,EAAOI,GACXI,EAAIR,EAAOK,GACXI,EAAIT,EAAOM,GACf,OAAQ,qBAAII,UAAWC,IAAOC,YAAtB,UAAoCL,EAApC,MAA0CC,EAA1C,MAAgDC,M,gECuE7CI,EAxEH,WAAO,IAAD,EACYC,mBAAS,GADrB,mBACPV,EADO,KACAW,EADA,OAEgBD,mBAAS,GAFzB,mBAEPT,EAFO,KAEEW,EAFF,OAGgBF,mBAAS,GAHzB,mBAGPR,EAHO,KAGEW,EAHF,KAIRC,EAAeC,YAAM,KAJb,EAKQL,oBAAS,GALjB,mBAKPM,EALO,KAKFC,EALE,KAMdC,qBAAU,WACN,IAAIf,EAAIH,EACJI,EAAIH,EACJI,EAAIH,EACJiB,EAAW,KAiBf,OAhBAA,EAAWL,EAAaM,WAAU,WAC1BJ,IACAX,IACAQ,EAAWR,GACPH,GAAW,KACXW,EAAW,GACXT,IACAQ,EAAWR,GACPH,GAAW,KACXW,EAAW,GACXT,IACAQ,EAASR,SAKlB,kBAAMgB,EAASE,iBACvB,CAACL,EAAKhB,EAAOC,EAASC,EAASY,IAiClC,OACI,sBAAKR,UAAWgB,IAAMC,QAAtB,UACI,oBAAIjB,UAAWgB,IAAME,SAArB,uBACA,cAAC,EAAD,CAAWxB,MAAOA,EAAOC,QAASA,EAASC,QAASA,IACpD,wBAAQI,UAAWgB,IAAMG,OAAQC,QA5BrB,WAChBT,GAAO,GACPJ,EAAW,IA0BP,mBACA,wBAAQP,UAAWgB,IAAMG,OAAQC,QAxBtB,WACfT,GAAO,GACPN,EAAS,GACTC,EAAW,GACXC,EAAW,IAoBP,kBACA,wBAAQP,UAAWgB,IAAMG,OAAQC,QAjBrB,SAACC,GACjB,IAAMC,EAASC,YAAUF,EAAEG,OAAQH,EAAEI,MACjBH,EAAOI,KACvBC,YAAOL,EAAOI,KAAKE,YAAa,OAChCC,aAAI,SAAAC,GAAM,OAAIA,EAAOC,UACrBC,aAAO,SAAAC,GAAY,OAAqB,IAAjBA,MACfnB,WAAU,WAClBH,GAAO,OAUP,kBACA,wBAAQX,UAAWgB,IAAMG,OAAQC,QAvCtB,WACff,EAAS,GACTC,EAAW,GACXC,EAAW,GACXI,GAAO,IAmCH,uBCtEZuB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,U,kBCP1BlD,EAAOC,QAAU,CAAC,QAAU,qBAAqB,SAAW,sBAAsB,OAAS,uB","file":"static/js/main.e8fb631d.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"timeDisplay\":\"stopwatch_timeDisplay__1vHB7\"};","import styles from '../stopwatch/stopwatch.module.css'\r\n\r\nconst Stopwatch = (props) => {\r\n    const {hours, minutes, seconds} = props;\r\n    let h = format(hours);\r\n    let m = format(minutes);\r\n    let s = format(seconds);\r\n    return (<h3 className={styles.timeDisplay}>{h} : {m} : {s}</h3>)\r\n};\r\n\r\nfunction format(num) {\r\n    return num <= 9 ? \"0\" + num : num;\r\n}\r\n\r\nexport default Stopwatch;\r\n","import React, {useEffect, useState} from 'react';\r\nimport Stopwatch from './stopwatch/Stopwatch';\r\nimport style from './App.module.css';\r\nimport {fromEvent, timer} from \"rxjs\";\r\nimport {buffer, debounceTime, filter, map} from \"rxjs/operators\";\r\n\r\nconst App = () => {\r\n    const [hours, setHours] = useState(0);\r\n    const [minutes, setMinutes] = useState(0);\r\n    const [seconds, setSeconds] = useState(0);\r\n    const intervalTime = timer(1000);\r\n    const [run, setRun] = useState(false);\r\n    useEffect(() => {\r\n        let h = hours;\r\n        let m = minutes;\r\n        let s = seconds;\r\n        let interval = null;\r\n        interval = intervalTime.subscribe(() => {\r\n            if (run) {\r\n                s++;\r\n                setSeconds(s);\r\n                if (seconds >= 59) {\r\n                    setSeconds(0);\r\n                    m++;\r\n                    setMinutes(m);\r\n                    if (minutes >= 59) {\r\n                        setMinutes(0);\r\n                        h++;\r\n                        setHours(h);\r\n                    }\r\n                }\r\n            }\r\n        });\r\n        return () => interval.unsubscribe();\r\n    }, [run, hours, minutes, seconds, intervalTime]);\r\n    const buttonReset =() => {\r\n        setHours(0);\r\n        setMinutes(0);\r\n        setSeconds(0);\r\n        setRun(true);\r\n    }\r\n\r\n\r\n    const buttonStart = () => {\r\n        setRun(true);\r\n        setSeconds(0);\r\n    }\r\n\r\n    const buttonStop = () => {\r\n        setRun(false);\r\n        setHours(0);\r\n        setMinutes(0);\r\n        setSeconds(0);\r\n    }\r\n\r\n\r\n    const buttonWait  = (e) => {\r\n        const click$ = fromEvent(e.target, e.type);\r\n        const doubleClick = click$.pipe(\r\n            buffer(click$.pipe(debounceTime(300))),\r\n            map(clicks => clicks.length),\r\n            filter(clicksLength => clicksLength === 2));\r\n        doubleClick.subscribe(() => {\r\n            setRun(false);\r\n        });\r\n    }\r\n\r\n    return (\r\n        <div className={style.content}>\r\n            <h2 className={style.headline}>Stopwatch</h2>\r\n            <Stopwatch hours={hours} minutes={minutes} seconds={seconds}/>\r\n            <button className={style.button} onClick={buttonStart}>start</button>\r\n            <button className={style.button} onClick={buttonStop}>stop</button>\r\n            <button className={style.button} onClick={buttonWait}>wait</button>\r\n            <button className={style.button} onClick={buttonReset}>reset</button>\r\n        </div>\r\n    )\r\n};\r\nexport default App;\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"content\":\"App_content__2jd6c\",\"headline\":\"App_headline__3UnJl\",\"button\":\"App_button__3WXip\"};"],"sourceRoot":""}